// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Sporfe_1._0.Models;

namespace Sporfe1._0.Migrations
{
    [DbContext(typeof(SprofeContext))]
    [Migration("20181107213355_CreacionDb")]
    partial class CreacionDb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.2-rtm-30932")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Sporfe_1._0.Models.Alumno", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Alias")
                        .IsRequired();

                    b.Property<string>("Contraseña")
                        .IsRequired();

                    b.Property<string>("Nombre")
                        .IsRequired();

                    b.Property<int?>("ProfesorId");

                    b.Property<string>("correo")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("ProfesorId");

                    b.ToTable("Alumnos");
                });

            modelBuilder.Entity("Sporfe_1._0.Models.Calificacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("buenaGente");

                    b.Property<int>("ensenanza");

                    b.Property<int>("evaluacion");

                    b.Property<int>("promcalificacion");

                    b.HasKey("Id");

                    b.ToTable("Calificaciones");
                });

            modelBuilder.Entity("Sporfe_1._0.Models.Curso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Nombre");

                    b.Property<int?>("ProfesorId");

                    b.HasKey("Id");

                    b.HasIndex("ProfesorId");

                    b.ToTable("Cursos");
                });

            modelBuilder.Entity("Sporfe_1._0.Models.Profesor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AniosEsperiencia");

                    b.Property<int>("Edad");

                    b.Property<string>("Nombre")
                        .IsRequired();

                    b.Property<int?>("calificacionId");

                    b.Property<string>("comentario");

                    b.Property<string>("correo");

                    b.HasKey("Id");

                    b.HasIndex("calificacionId");

                    b.ToTable("Profesores");
                });

            modelBuilder.Entity("Sporfe_1._0.Models.Alumno", b =>
                {
                    b.HasOne("Sporfe_1._0.Models.Profesor")
                        .WithMany("Alumnos")
                        .HasForeignKey("ProfesorId");
                });

            modelBuilder.Entity("Sporfe_1._0.Models.Curso", b =>
                {
                    b.HasOne("Sporfe_1._0.Models.Profesor")
                        .WithMany("Cursos")
                        .HasForeignKey("ProfesorId");
                });

            modelBuilder.Entity("Sporfe_1._0.Models.Profesor", b =>
                {
                    b.HasOne("Sporfe_1._0.Models.Calificacion", "calificacion")
                        .WithMany()
                        .HasForeignKey("calificacionId");
                });
#pragma warning restore 612, 618
        }
    }
}
