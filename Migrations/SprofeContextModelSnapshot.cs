// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Sporfe_1._0.Models;

namespace Sporfe1._0.Migrations
{
    [DbContext(typeof(SprofeContext))]
    partial class SprofeContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Sporfe_1._0.Models.Alumno", b =>
                {
                    b.Property<int>("IdAlumno")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Alias")
                        .IsRequired();

                    b.Property<string>("Contraseña")
                        .IsRequired();

                    b.Property<string>("Nombre")
                        .IsRequired();

                    b.Property<string>("correo")
                        .IsRequired();

                    b.HasKey("IdAlumno");

                    b.ToTable("Alumno");
                });

            modelBuilder.Entity("Sporfe_1._0.Models.Calificacion", b =>
                {
                    b.Property<int>("IdCalificacion")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("buenaGente");

                    b.Property<int>("ensenanza");

                    b.Property<int>("evaluacion");

                    b.Property<int>("promcalificacion");

                    b.HasKey("IdCalificacion");

                    b.ToTable("Calificacion");
                });

            modelBuilder.Entity("Sporfe_1._0.Models.Curso", b =>
                {
                    b.Property<int>("IdCurso")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Nombre");

                    b.HasKey("IdCurso");

                    b.ToTable("Curso");
                });

            modelBuilder.Entity("Sporfe_1._0.Models.Profesor", b =>
                {
                    b.Property<int>("IdProfesor")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AniosExperiencia");

                    b.Property<int>("Edad");

                    b.Property<string>("Foto");

                    b.Property<string>("Nombre")
                        .IsRequired();

                    b.Property<int?>("calificacionIdCalificacion");

                    b.Property<string>("comentario");

                    b.Property<string>("correo");

                    b.HasKey("IdProfesor");

                    b.HasIndex("calificacionIdCalificacion");

                    b.ToTable("Profesor");
                });

            modelBuilder.Entity("Sporfe_1._0.Models.ProfesorAlumno", b =>
                {
                    b.Property<int>("IdProfesor");

                    b.Property<int>("IdAlumno");

                    b.HasKey("IdProfesor", "IdAlumno");

                    b.HasIndex("IdAlumno");

                    b.ToTable("ProfesorAlumno");
                });

            modelBuilder.Entity("Sporfe_1._0.Models.ProfesorCurso", b =>
                {
                    b.Property<int>("IdCurso");

                    b.Property<int>("IdProfesor");

                    b.HasKey("IdCurso", "IdProfesor");

                    b.HasIndex("IdProfesor");

                    b.ToTable("ProfesorCurso");
                });

            modelBuilder.Entity("Sporfe_1._0.Models.Profesor", b =>
                {
                    b.HasOne("Sporfe_1._0.Models.Calificacion", "calificacion")
                        .WithMany()
                        .HasForeignKey("calificacionIdCalificacion");
                });

            modelBuilder.Entity("Sporfe_1._0.Models.ProfesorAlumno", b =>
                {
                    b.HasOne("Sporfe_1._0.Models.Alumno", "Alumno")
                        .WithMany("ProfesorAlumno")
                        .HasForeignKey("IdAlumno")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Sporfe_1._0.Models.Profesor", "Profesor")
                        .WithMany("ProfesorAlumno")
                        .HasForeignKey("IdProfesor")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Sporfe_1._0.Models.ProfesorCurso", b =>
                {
                    b.HasOne("Sporfe_1._0.Models.Curso", "Curso")
                        .WithMany("ProfesorCurso")
                        .HasForeignKey("IdCurso")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Sporfe_1._0.Models.Profesor", "Profesor")
                        .WithMany("ProfesorCurso")
                        .HasForeignKey("IdProfesor")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
